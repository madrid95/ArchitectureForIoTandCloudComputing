// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hase.proto

package io.dama.vs.hase;

public final class Hase {
  private Hase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hase.Sensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 sensorID = 1;</code>
     */
    int getSensorID();
  }
  /**
   * Protobuf type {@code hase.Sensor}
   */
  public  static final class Sensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hase.Sensor)
      SensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sensor.newBuilder() to construct.
    private Sensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sensor() {
      sensorID_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Sensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              sensorID_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dama.vs.hase.Hase.internal_static_hase_Sensor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dama.vs.hase.Hase.internal_static_hase_Sensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dama.vs.hase.Hase.Sensor.class, io.dama.vs.hase.Hase.Sensor.Builder.class);
    }

    public static final int SENSORID_FIELD_NUMBER = 1;
    private int sensorID_;
    /**
     * <code>int32 sensorID = 1;</code>
     */
    public int getSensorID() {
      return sensorID_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sensorID_ != 0) {
        output.writeInt32(1, sensorID_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sensorID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sensorID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dama.vs.hase.Hase.Sensor)) {
        return super.equals(obj);
      }
      io.dama.vs.hase.Hase.Sensor other = (io.dama.vs.hase.Hase.Sensor) obj;

      boolean result = true;
      result = result && (getSensorID()
          == other.getSensorID());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SENSORID_FIELD_NUMBER;
      hash = (53 * hash) + getSensorID();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Sensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Sensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dama.vs.hase.Hase.Sensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hase.Sensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hase.Sensor)
        io.dama.vs.hase.Hase.SensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dama.vs.hase.Hase.internal_static_hase_Sensor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dama.vs.hase.Hase.internal_static_hase_Sensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dama.vs.hase.Hase.Sensor.class, io.dama.vs.hase.Hase.Sensor.Builder.class);
      }

      // Construct using io.dama.vs.hase.Hase.Sensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sensorID_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dama.vs.hase.Hase.internal_static_hase_Sensor_descriptor;
      }

      public io.dama.vs.hase.Hase.Sensor getDefaultInstanceForType() {
        return io.dama.vs.hase.Hase.Sensor.getDefaultInstance();
      }

      public io.dama.vs.hase.Hase.Sensor build() {
        io.dama.vs.hase.Hase.Sensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dama.vs.hase.Hase.Sensor buildPartial() {
        io.dama.vs.hase.Hase.Sensor result = new io.dama.vs.hase.Hase.Sensor(this);
        result.sensorID_ = sensorID_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dama.vs.hase.Hase.Sensor) {
          return mergeFrom((io.dama.vs.hase.Hase.Sensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dama.vs.hase.Hase.Sensor other) {
        if (other == io.dama.vs.hase.Hase.Sensor.getDefaultInstance()) return this;
        if (other.getSensorID() != 0) {
          setSensorID(other.getSensorID());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dama.vs.hase.Hase.Sensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dama.vs.hase.Hase.Sensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int sensorID_ ;
      /**
       * <code>int32 sensorID = 1;</code>
       */
      public int getSensorID() {
        return sensorID_;
      }
      /**
       * <code>int32 sensorID = 1;</code>
       */
      public Builder setSensorID(int value) {
        
        sensorID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sensorID = 1;</code>
       */
      public Builder clearSensorID() {
        
        sensorID_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:hase.Sensor)
    }

    // @@protoc_insertion_point(class_scope:hase.Sensor)
    private static final io.dama.vs.hase.Hase.Sensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dama.vs.hase.Hase.Sensor();
    }

    public static io.dama.vs.hase.Hase.Sensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sensor>
        PARSER = new com.google.protobuf.AbstractParser<Sensor>() {
      public Sensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Sensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sensor> getParserForType() {
      return PARSER;
    }

    public io.dama.vs.hase.Hase.Sensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelegramOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hase.Telegram)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * questionable: part of Request
     * </pre>
     *
     * <code>.hase.Sensor sensor = 1;</code>
     */
    boolean hasSensor();
    /**
     * <pre>
     * questionable: part of Request
     * </pre>
     *
     * <code>.hase.Sensor sensor = 1;</code>
     */
    io.dama.vs.hase.Hase.Sensor getSensor();
    /**
     * <pre>
     * questionable: part of Request
     * </pre>
     *
     * <code>.hase.Sensor sensor = 1;</code>
     */
    io.dama.vs.hase.Hase.SensorOrBuilder getSensorOrBuilder();

    /**
     * <pre>
     * questionable: gRPC on top of TCP (no need to order)
     * </pre>
     *
     * <code>int32 continuousNumber = 2;</code>
     */
    int getContinuousNumber();

    /**
     * <code>bool hail = 3;</code>
     */
    boolean getHail();

    /**
     * <code>int32 occurrencesPL = 4;</code>
     */
    int getOccurrencesPL();

    /**
     * <code>int32 occurrencesGS = 5;</code>
     */
    int getOccurrencesGS();

    /**
     * <code>int32 occurrencesGR = 6;</code>
     */
    int getOccurrencesGR();

    /**
     * <code>bool microphone = 7;</code>
     */
    boolean getMicrophone();

    /**
     * <code>int32 microphoneCapacity = 8;</code>
     */
    int getMicrophoneCapacity();
  }
  /**
   * Protobuf type {@code hase.Telegram}
   */
  public  static final class Telegram extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hase.Telegram)
      TelegramOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Telegram.newBuilder() to construct.
    private Telegram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Telegram() {
      continuousNumber_ = 0;
      hail_ = false;
      occurrencesPL_ = 0;
      occurrencesGS_ = 0;
      occurrencesGR_ = 0;
      microphone_ = false;
      microphoneCapacity_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Telegram(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dama.vs.hase.Hase.Sensor.Builder subBuilder = null;
              if (sensor_ != null) {
                subBuilder = sensor_.toBuilder();
              }
              sensor_ = input.readMessage(io.dama.vs.hase.Hase.Sensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensor_);
                sensor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              continuousNumber_ = input.readInt32();
              break;
            }
            case 24: {

              hail_ = input.readBool();
              break;
            }
            case 32: {

              occurrencesPL_ = input.readInt32();
              break;
            }
            case 40: {

              occurrencesGS_ = input.readInt32();
              break;
            }
            case 48: {

              occurrencesGR_ = input.readInt32();
              break;
            }
            case 56: {

              microphone_ = input.readBool();
              break;
            }
            case 64: {

              microphoneCapacity_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dama.vs.hase.Hase.internal_static_hase_Telegram_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dama.vs.hase.Hase.internal_static_hase_Telegram_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dama.vs.hase.Hase.Telegram.class, io.dama.vs.hase.Hase.Telegram.Builder.class);
    }

    public static final int SENSOR_FIELD_NUMBER = 1;
    private io.dama.vs.hase.Hase.Sensor sensor_;
    /**
     * <pre>
     * questionable: part of Request
     * </pre>
     *
     * <code>.hase.Sensor sensor = 1;</code>
     */
    public boolean hasSensor() {
      return sensor_ != null;
    }
    /**
     * <pre>
     * questionable: part of Request
     * </pre>
     *
     * <code>.hase.Sensor sensor = 1;</code>
     */
    public io.dama.vs.hase.Hase.Sensor getSensor() {
      return sensor_ == null ? io.dama.vs.hase.Hase.Sensor.getDefaultInstance() : sensor_;
    }
    /**
     * <pre>
     * questionable: part of Request
     * </pre>
     *
     * <code>.hase.Sensor sensor = 1;</code>
     */
    public io.dama.vs.hase.Hase.SensorOrBuilder getSensorOrBuilder() {
      return getSensor();
    }

    public static final int CONTINUOUSNUMBER_FIELD_NUMBER = 2;
    private int continuousNumber_;
    /**
     * <pre>
     * questionable: gRPC on top of TCP (no need to order)
     * </pre>
     *
     * <code>int32 continuousNumber = 2;</code>
     */
    public int getContinuousNumber() {
      return continuousNumber_;
    }

    public static final int HAIL_FIELD_NUMBER = 3;
    private boolean hail_;
    /**
     * <code>bool hail = 3;</code>
     */
    public boolean getHail() {
      return hail_;
    }

    public static final int OCCURRENCESPL_FIELD_NUMBER = 4;
    private int occurrencesPL_;
    /**
     * <code>int32 occurrencesPL = 4;</code>
     */
    public int getOccurrencesPL() {
      return occurrencesPL_;
    }

    public static final int OCCURRENCESGS_FIELD_NUMBER = 5;
    private int occurrencesGS_;
    /**
     * <code>int32 occurrencesGS = 5;</code>
     */
    public int getOccurrencesGS() {
      return occurrencesGS_;
    }

    public static final int OCCURRENCESGR_FIELD_NUMBER = 6;
    private int occurrencesGR_;
    /**
     * <code>int32 occurrencesGR = 6;</code>
     */
    public int getOccurrencesGR() {
      return occurrencesGR_;
    }

    public static final int MICROPHONE_FIELD_NUMBER = 7;
    private boolean microphone_;
    /**
     * <code>bool microphone = 7;</code>
     */
    public boolean getMicrophone() {
      return microphone_;
    }

    public static final int MICROPHONECAPACITY_FIELD_NUMBER = 8;
    private int microphoneCapacity_;
    /**
     * <code>int32 microphoneCapacity = 8;</code>
     */
    public int getMicrophoneCapacity() {
      return microphoneCapacity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sensor_ != null) {
        output.writeMessage(1, getSensor());
      }
      if (continuousNumber_ != 0) {
        output.writeInt32(2, continuousNumber_);
      }
      if (hail_ != false) {
        output.writeBool(3, hail_);
      }
      if (occurrencesPL_ != 0) {
        output.writeInt32(4, occurrencesPL_);
      }
      if (occurrencesGS_ != 0) {
        output.writeInt32(5, occurrencesGS_);
      }
      if (occurrencesGR_ != 0) {
        output.writeInt32(6, occurrencesGR_);
      }
      if (microphone_ != false) {
        output.writeBool(7, microphone_);
      }
      if (microphoneCapacity_ != 0) {
        output.writeInt32(8, microphoneCapacity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sensor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSensor());
      }
      if (continuousNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, continuousNumber_);
      }
      if (hail_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, hail_);
      }
      if (occurrencesPL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, occurrencesPL_);
      }
      if (occurrencesGS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, occurrencesGS_);
      }
      if (occurrencesGR_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, occurrencesGR_);
      }
      if (microphone_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, microphone_);
      }
      if (microphoneCapacity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, microphoneCapacity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dama.vs.hase.Hase.Telegram)) {
        return super.equals(obj);
      }
      io.dama.vs.hase.Hase.Telegram other = (io.dama.vs.hase.Hase.Telegram) obj;

      boolean result = true;
      result = result && (hasSensor() == other.hasSensor());
      if (hasSensor()) {
        result = result && getSensor()
            .equals(other.getSensor());
      }
      result = result && (getContinuousNumber()
          == other.getContinuousNumber());
      result = result && (getHail()
          == other.getHail());
      result = result && (getOccurrencesPL()
          == other.getOccurrencesPL());
      result = result && (getOccurrencesGS()
          == other.getOccurrencesGS());
      result = result && (getOccurrencesGR()
          == other.getOccurrencesGR());
      result = result && (getMicrophone()
          == other.getMicrophone());
      result = result && (getMicrophoneCapacity()
          == other.getMicrophoneCapacity());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSensor()) {
        hash = (37 * hash) + SENSOR_FIELD_NUMBER;
        hash = (53 * hash) + getSensor().hashCode();
      }
      hash = (37 * hash) + CONTINUOUSNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getContinuousNumber();
      hash = (37 * hash) + HAIL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHail());
      hash = (37 * hash) + OCCURRENCESPL_FIELD_NUMBER;
      hash = (53 * hash) + getOccurrencesPL();
      hash = (37 * hash) + OCCURRENCESGS_FIELD_NUMBER;
      hash = (53 * hash) + getOccurrencesGS();
      hash = (37 * hash) + OCCURRENCESGR_FIELD_NUMBER;
      hash = (53 * hash) + getOccurrencesGR();
      hash = (37 * hash) + MICROPHONE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMicrophone());
      hash = (37 * hash) + MICROPHONECAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getMicrophoneCapacity();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Telegram parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Telegram parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Telegram parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dama.vs.hase.Hase.Telegram prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hase.Telegram}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hase.Telegram)
        io.dama.vs.hase.Hase.TelegramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dama.vs.hase.Hase.internal_static_hase_Telegram_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dama.vs.hase.Hase.internal_static_hase_Telegram_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dama.vs.hase.Hase.Telegram.class, io.dama.vs.hase.Hase.Telegram.Builder.class);
      }

      // Construct using io.dama.vs.hase.Hase.Telegram.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (sensorBuilder_ == null) {
          sensor_ = null;
        } else {
          sensor_ = null;
          sensorBuilder_ = null;
        }
        continuousNumber_ = 0;

        hail_ = false;

        occurrencesPL_ = 0;

        occurrencesGS_ = 0;

        occurrencesGR_ = 0;

        microphone_ = false;

        microphoneCapacity_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dama.vs.hase.Hase.internal_static_hase_Telegram_descriptor;
      }

      public io.dama.vs.hase.Hase.Telegram getDefaultInstanceForType() {
        return io.dama.vs.hase.Hase.Telegram.getDefaultInstance();
      }

      public io.dama.vs.hase.Hase.Telegram build() {
        io.dama.vs.hase.Hase.Telegram result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dama.vs.hase.Hase.Telegram buildPartial() {
        io.dama.vs.hase.Hase.Telegram result = new io.dama.vs.hase.Hase.Telegram(this);
        if (sensorBuilder_ == null) {
          result.sensor_ = sensor_;
        } else {
          result.sensor_ = sensorBuilder_.build();
        }
        result.continuousNumber_ = continuousNumber_;
        result.hail_ = hail_;
        result.occurrencesPL_ = occurrencesPL_;
        result.occurrencesGS_ = occurrencesGS_;
        result.occurrencesGR_ = occurrencesGR_;
        result.microphone_ = microphone_;
        result.microphoneCapacity_ = microphoneCapacity_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dama.vs.hase.Hase.Telegram) {
          return mergeFrom((io.dama.vs.hase.Hase.Telegram)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dama.vs.hase.Hase.Telegram other) {
        if (other == io.dama.vs.hase.Hase.Telegram.getDefaultInstance()) return this;
        if (other.hasSensor()) {
          mergeSensor(other.getSensor());
        }
        if (other.getContinuousNumber() != 0) {
          setContinuousNumber(other.getContinuousNumber());
        }
        if (other.getHail() != false) {
          setHail(other.getHail());
        }
        if (other.getOccurrencesPL() != 0) {
          setOccurrencesPL(other.getOccurrencesPL());
        }
        if (other.getOccurrencesGS() != 0) {
          setOccurrencesGS(other.getOccurrencesGS());
        }
        if (other.getOccurrencesGR() != 0) {
          setOccurrencesGR(other.getOccurrencesGR());
        }
        if (other.getMicrophone() != false) {
          setMicrophone(other.getMicrophone());
        }
        if (other.getMicrophoneCapacity() != 0) {
          setMicrophoneCapacity(other.getMicrophoneCapacity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dama.vs.hase.Hase.Telegram parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dama.vs.hase.Hase.Telegram) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dama.vs.hase.Hase.Sensor sensor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dama.vs.hase.Hase.Sensor, io.dama.vs.hase.Hase.Sensor.Builder, io.dama.vs.hase.Hase.SensorOrBuilder> sensorBuilder_;
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public boolean hasSensor() {
        return sensorBuilder_ != null || sensor_ != null;
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public io.dama.vs.hase.Hase.Sensor getSensor() {
        if (sensorBuilder_ == null) {
          return sensor_ == null ? io.dama.vs.hase.Hase.Sensor.getDefaultInstance() : sensor_;
        } else {
          return sensorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public Builder setSensor(io.dama.vs.hase.Hase.Sensor value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensor_ = value;
          onChanged();
        } else {
          sensorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public Builder setSensor(
          io.dama.vs.hase.Hase.Sensor.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          sensor_ = builderForValue.build();
          onChanged();
        } else {
          sensorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public Builder mergeSensor(io.dama.vs.hase.Hase.Sensor value) {
        if (sensorBuilder_ == null) {
          if (sensor_ != null) {
            sensor_ =
              io.dama.vs.hase.Hase.Sensor.newBuilder(sensor_).mergeFrom(value).buildPartial();
          } else {
            sensor_ = value;
          }
          onChanged();
        } else {
          sensorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public Builder clearSensor() {
        if (sensorBuilder_ == null) {
          sensor_ = null;
          onChanged();
        } else {
          sensor_ = null;
          sensorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public io.dama.vs.hase.Hase.Sensor.Builder getSensorBuilder() {
        
        onChanged();
        return getSensorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      public io.dama.vs.hase.Hase.SensorOrBuilder getSensorOrBuilder() {
        if (sensorBuilder_ != null) {
          return sensorBuilder_.getMessageOrBuilder();
        } else {
          return sensor_ == null ?
              io.dama.vs.hase.Hase.Sensor.getDefaultInstance() : sensor_;
        }
      }
      /**
       * <pre>
       * questionable: part of Request
       * </pre>
       *
       * <code>.hase.Sensor sensor = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dama.vs.hase.Hase.Sensor, io.dama.vs.hase.Hase.Sensor.Builder, io.dama.vs.hase.Hase.SensorOrBuilder> 
          getSensorFieldBuilder() {
        if (sensorBuilder_ == null) {
          sensorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dama.vs.hase.Hase.Sensor, io.dama.vs.hase.Hase.Sensor.Builder, io.dama.vs.hase.Hase.SensorOrBuilder>(
                  getSensor(),
                  getParentForChildren(),
                  isClean());
          sensor_ = null;
        }
        return sensorBuilder_;
      }

      private int continuousNumber_ ;
      /**
       * <pre>
       * questionable: gRPC on top of TCP (no need to order)
       * </pre>
       *
       * <code>int32 continuousNumber = 2;</code>
       */
      public int getContinuousNumber() {
        return continuousNumber_;
      }
      /**
       * <pre>
       * questionable: gRPC on top of TCP (no need to order)
       * </pre>
       *
       * <code>int32 continuousNumber = 2;</code>
       */
      public Builder setContinuousNumber(int value) {
        
        continuousNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * questionable: gRPC on top of TCP (no need to order)
       * </pre>
       *
       * <code>int32 continuousNumber = 2;</code>
       */
      public Builder clearContinuousNumber() {
        
        continuousNumber_ = 0;
        onChanged();
        return this;
      }

      private boolean hail_ ;
      /**
       * <code>bool hail = 3;</code>
       */
      public boolean getHail() {
        return hail_;
      }
      /**
       * <code>bool hail = 3;</code>
       */
      public Builder setHail(boolean value) {
        
        hail_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool hail = 3;</code>
       */
      public Builder clearHail() {
        
        hail_ = false;
        onChanged();
        return this;
      }

      private int occurrencesPL_ ;
      /**
       * <code>int32 occurrencesPL = 4;</code>
       */
      public int getOccurrencesPL() {
        return occurrencesPL_;
      }
      /**
       * <code>int32 occurrencesPL = 4;</code>
       */
      public Builder setOccurrencesPL(int value) {
        
        occurrencesPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 occurrencesPL = 4;</code>
       */
      public Builder clearOccurrencesPL() {
        
        occurrencesPL_ = 0;
        onChanged();
        return this;
      }

      private int occurrencesGS_ ;
      /**
       * <code>int32 occurrencesGS = 5;</code>
       */
      public int getOccurrencesGS() {
        return occurrencesGS_;
      }
      /**
       * <code>int32 occurrencesGS = 5;</code>
       */
      public Builder setOccurrencesGS(int value) {
        
        occurrencesGS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 occurrencesGS = 5;</code>
       */
      public Builder clearOccurrencesGS() {
        
        occurrencesGS_ = 0;
        onChanged();
        return this;
      }

      private int occurrencesGR_ ;
      /**
       * <code>int32 occurrencesGR = 6;</code>
       */
      public int getOccurrencesGR() {
        return occurrencesGR_;
      }
      /**
       * <code>int32 occurrencesGR = 6;</code>
       */
      public Builder setOccurrencesGR(int value) {
        
        occurrencesGR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 occurrencesGR = 6;</code>
       */
      public Builder clearOccurrencesGR() {
        
        occurrencesGR_ = 0;
        onChanged();
        return this;
      }

      private boolean microphone_ ;
      /**
       * <code>bool microphone = 7;</code>
       */
      public boolean getMicrophone() {
        return microphone_;
      }
      /**
       * <code>bool microphone = 7;</code>
       */
      public Builder setMicrophone(boolean value) {
        
        microphone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool microphone = 7;</code>
       */
      public Builder clearMicrophone() {
        
        microphone_ = false;
        onChanged();
        return this;
      }

      private int microphoneCapacity_ ;
      /**
       * <code>int32 microphoneCapacity = 8;</code>
       */
      public int getMicrophoneCapacity() {
        return microphoneCapacity_;
      }
      /**
       * <code>int32 microphoneCapacity = 8;</code>
       */
      public Builder setMicrophoneCapacity(int value) {
        
        microphoneCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 microphoneCapacity = 8;</code>
       */
      public Builder clearMicrophoneCapacity() {
        
        microphoneCapacity_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:hase.Telegram)
    }

    // @@protoc_insertion_point(class_scope:hase.Telegram)
    private static final io.dama.vs.hase.Hase.Telegram DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dama.vs.hase.Hase.Telegram();
    }

    public static io.dama.vs.hase.Hase.Telegram getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Telegram>
        PARSER = new com.google.protobuf.AbstractParser<Telegram>() {
      public Telegram parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Telegram(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Telegram> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Telegram> getParserForType() {
      return PARSER;
    }

    public io.dama.vs.hase.Hase.Telegram getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmptyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hase.Empty)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code hase.Empty}
   */
  public  static final class Empty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hase.Empty)
      EmptyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Empty.newBuilder() to construct.
    private Empty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Empty() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Empty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dama.vs.hase.Hase.internal_static_hase_Empty_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dama.vs.hase.Hase.internal_static_hase_Empty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dama.vs.hase.Hase.Empty.class, io.dama.vs.hase.Hase.Empty.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dama.vs.hase.Hase.Empty)) {
        return super.equals(obj);
      }
      io.dama.vs.hase.Hase.Empty other = (io.dama.vs.hase.Hase.Empty) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dama.vs.hase.Hase.Empty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Empty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Empty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Empty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dama.vs.hase.Hase.Empty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hase.Empty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hase.Empty)
        io.dama.vs.hase.Hase.EmptyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dama.vs.hase.Hase.internal_static_hase_Empty_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dama.vs.hase.Hase.internal_static_hase_Empty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dama.vs.hase.Hase.Empty.class, io.dama.vs.hase.Hase.Empty.Builder.class);
      }

      // Construct using io.dama.vs.hase.Hase.Empty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dama.vs.hase.Hase.internal_static_hase_Empty_descriptor;
      }

      public io.dama.vs.hase.Hase.Empty getDefaultInstanceForType() {
        return io.dama.vs.hase.Hase.Empty.getDefaultInstance();
      }

      public io.dama.vs.hase.Hase.Empty build() {
        io.dama.vs.hase.Hase.Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dama.vs.hase.Hase.Empty buildPartial() {
        io.dama.vs.hase.Hase.Empty result = new io.dama.vs.hase.Hase.Empty(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dama.vs.hase.Hase.Empty) {
          return mergeFrom((io.dama.vs.hase.Hase.Empty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dama.vs.hase.Hase.Empty other) {
        if (other == io.dama.vs.hase.Hase.Empty.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dama.vs.hase.Hase.Empty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dama.vs.hase.Hase.Empty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:hase.Empty)
    }

    // @@protoc_insertion_point(class_scope:hase.Empty)
    private static final io.dama.vs.hase.Hase.Empty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dama.vs.hase.Hase.Empty();
    }

    public static io.dama.vs.hase.Hase.Empty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Empty>
        PARSER = new com.google.protobuf.AbstractParser<Empty>() {
      public Empty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Empty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Empty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Empty> getParserForType() {
      return PARSER;
    }

    public io.dama.vs.hase.Hase.Empty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BooleanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hase.Boolean)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool result = 1;</code>
     */
    boolean getResult();
  }
  /**
   * Protobuf type {@code hase.Boolean}
   */
  public  static final class Boolean extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hase.Boolean)
      BooleanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Boolean.newBuilder() to construct.
    private Boolean(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Boolean() {
      result_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Boolean(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              result_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dama.vs.hase.Hase.internal_static_hase_Boolean_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dama.vs.hase.Hase.internal_static_hase_Boolean_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dama.vs.hase.Hase.Boolean.class, io.dama.vs.hase.Hase.Boolean.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>bool result = 1;</code>
     */
    public boolean getResult() {
      return result_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dama.vs.hase.Hase.Boolean)) {
        return super.equals(obj);
      }
      io.dama.vs.hase.Hase.Boolean other = (io.dama.vs.hase.Hase.Boolean) obj;

      boolean result = true;
      result = result && (getResult()
          == other.getResult());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Boolean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Boolean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dama.vs.hase.Hase.Boolean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dama.vs.hase.Hase.Boolean prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hase.Boolean}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hase.Boolean)
        io.dama.vs.hase.Hase.BooleanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dama.vs.hase.Hase.internal_static_hase_Boolean_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dama.vs.hase.Hase.internal_static_hase_Boolean_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dama.vs.hase.Hase.Boolean.class, io.dama.vs.hase.Hase.Boolean.Builder.class);
      }

      // Construct using io.dama.vs.hase.Hase.Boolean.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dama.vs.hase.Hase.internal_static_hase_Boolean_descriptor;
      }

      public io.dama.vs.hase.Hase.Boolean getDefaultInstanceForType() {
        return io.dama.vs.hase.Hase.Boolean.getDefaultInstance();
      }

      public io.dama.vs.hase.Hase.Boolean build() {
        io.dama.vs.hase.Hase.Boolean result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dama.vs.hase.Hase.Boolean buildPartial() {
        io.dama.vs.hase.Hase.Boolean result = new io.dama.vs.hase.Hase.Boolean(this);
        result.result_ = result_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dama.vs.hase.Hase.Boolean) {
          return mergeFrom((io.dama.vs.hase.Hase.Boolean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dama.vs.hase.Hase.Boolean other) {
        if (other == io.dama.vs.hase.Hase.Boolean.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dama.vs.hase.Hase.Boolean parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dama.vs.hase.Hase.Boolean) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <code>bool result = 1;</code>
       */
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>bool result = 1;</code>
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool result = 1;</code>
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:hase.Boolean)
    }

    // @@protoc_insertion_point(class_scope:hase.Boolean)
    private static final io.dama.vs.hase.Hase.Boolean DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dama.vs.hase.Hase.Boolean();
    }

    public static io.dama.vs.hase.Hase.Boolean getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Boolean>
        PARSER = new com.google.protobuf.AbstractParser<Boolean>() {
      public Boolean parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Boolean(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Boolean> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Boolean> getParserForType() {
      return PARSER;
    }

    public io.dama.vs.hase.Hase.Boolean getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hase_Sensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hase_Sensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hase_Telegram_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hase_Telegram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hase_Empty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hase_Empty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hase_Boolean_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hase_Boolean_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nhase.proto\022\004hase\"\032\n\006Sensor\022\020\n\010sensorID" +
      "\030\001 \001(\005\"\305\001\n\010Telegram\022\034\n\006sensor\030\001 \001(\0132\014.ha" +
      "se.Sensor\022\030\n\020continuousNumber\030\002 \001(\005\022\014\n\004h" +
      "ail\030\003 \001(\010\022\025\n\roccurrencesPL\030\004 \001(\005\022\025\n\roccu" +
      "rrencesGS\030\005 \001(\005\022\025\n\roccurrencesGR\030\006 \001(\005\022\022" +
      "\n\nmicrophone\030\007 \001(\010\022\032\n\022microphoneCapacity" +
      "\030\010 \001(\005\"\007\n\005Empty\"\031\n\007Boolean\022\016\n\006result\030\001 \001" +
      "(\0102\307\001\n\013HaSeService\022(\n\013getSensorId\022\013.hase" +
      ".Empty\032\014.hase.Sensor\022(\n\tswitchOff\022\014.hase" +
      ".Sensor\032\r.hase.Boolean\022.\n\016getObservation" +
      "\022\014.hase.Sensor\032\016.hase.Telegram\0224\n\022stream" +
      "Observations\022\014.hase.Sensor\032\016.hase.Telegr" +
      "am0\001B\021\n\017io.dama.vs.haseb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_hase_Sensor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hase_Sensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hase_Sensor_descriptor,
        new java.lang.String[] { "SensorID", });
    internal_static_hase_Telegram_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hase_Telegram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hase_Telegram_descriptor,
        new java.lang.String[] { "Sensor", "ContinuousNumber", "Hail", "OccurrencesPL", "OccurrencesGS", "OccurrencesGR", "Microphone", "MicrophoneCapacity", });
    internal_static_hase_Empty_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_hase_Empty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hase_Empty_descriptor,
        new java.lang.String[] { });
    internal_static_hase_Boolean_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_hase_Boolean_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hase_Boolean_descriptor,
        new java.lang.String[] { "Result", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
